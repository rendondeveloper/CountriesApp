package com.rendonsoft.testtotalplay.features.home.framework.presentation.viewModelimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.rendonsoft.testtotalplay.features.home.framework.presentation.view.home.uiModels.StateViewimport com.rendonsoft.testtotalplay.features.home.usescases.GetCountryAllUsesCaseimport com.rendonsoft.testtotalplay.utils.models.results.ResultApiimport kotlinx.coroutines.launchclass CountryViewModel(private val getCountryAllUsesCase: GetCountryAllUsesCase) : ViewModel() {    private var countryStateMLD = MutableLiveData<StateView>()    val countryState: LiveData<StateView>        get() = countryStateMLD    fun getAllCountries(showPullToRefresh: Boolean = false) {        viewModelScope.launch {            countryStateMLD.value = StateView.Shimmer(showPullToRefresh = true)            when (val response = getCountryAllUsesCase.invoke()) {                is ResultApi.Success -> {                    countryStateMLD.value = if (response.data.isNotEmpty())                        StateView.Data(response.data)                    else                        StateView.Empty(message = "No encontramos países en la búsqueda")                }                is ResultApi.Error -> {                    countryStateMLD.value = StateView.Error("Ocurrió un error, inténtalo nuevamente")                }            }        }    }}