package com.rendonsoft.testtotalplay.features.home.framework.data.implementation.dataSourceimport com.rendonsoft.testtotalplay.features.home.data.dataSource.CountryDataSourceimport com.rendonsoft.testtotalplay.features.home.domain.CountryItemimport com.rendonsoft.testtotalplay.features.home.framework.data.config.api.CountryApiimport com.rendonsoft.testtotalplay.features.home.framework.data.implementation.mapper.CountryMapperimport com.rendonsoft.testtotalplay.utils.models.results.ResultApiimport com.rendonsoft.testtotalplay.utils.network.RetrofitCustomimport java.lang.Exceptionclass CountryDataSourceImpl(        private val mapper: CountryMapper,        private val retrofit: RetrofitCustom) : CountryDataSource {    override suspend fun getCountries(): ResultApi<List<CountryItem>> {        val response = retrofit.getRetrotif().create(CountryApi::class.java).getAllCountriesAsync().await()        return if (!response.isEmpty()) {            println("RESPONSE -> $response")            val data = mapper.map(response)            println("RESPONSE data -> $data")            ResultApi.Success(data)        } else {            ResultApi.Error(Exception())        }    }}